scalar Upload
scalar GenericScalar


type Query {
    # shop queries
    allCategories : [Category!]!
    allProducts: [Product!]!
    product(id: Int!): Product!
    orderItem(id: Int): OrderItem

    #users Queries
    allUsers: [User!]!
    user(id: Int!): User!
    profile(UserId: Int!): Profile!

}

type Mutation {
    # shop mutations
    createCategory(
        name: String!
    ): createCategoryPayload!

    deleteCategory(id: Int!): deleteCategoryPayload

    createProduct(
        categoryId: Int!
        name: String!
        description: String!
        price: Float!
        image: Upload!
    ): createProductPayload!

    deleteProduct(id: Int): deleteProductPayload

    #user mutations

    Signup(
        username: String!
        email: String!
        password: String!
        password1: String!
    ): SignupPayload

    verifyToken(token: String!): VerifyToken
    refreshToken(token: String!): RefreshToken
    tokenAuth(username: String!, password:String!): TokenAuth
}

#shoptypes
type Category {
    id: Int!
    name: String!
    products: [Product!]!
}


type Product {
    id: Int!
    category: Category!
    name: String!
    description: String!
    image: String!
}

type OrderItem {
    id: Int
    product: Product
    customer: User
    quantity: Int
    totalPrice: Float
    time: String
}

type Order {
    id: Int
    orderItems: [OrderItem]
    total_price: Float
    customer: User
}

type createCategoryPayload {
    error: String!
    success: Boolean!
    category: Category
}

type deleteCategoryPayload {
    success: Boolean!
    error: String!
}

type createProductPayload {
    success: Boolean!
    error: String!
    product: Product!
}

type deleteProductPayload {
    success: Boolean
    error: String
}


#users types

type User {
    id: Int
    username: String
    email: String
    profile: Profile
}

type Profile {
    id: Int
    user: User
    firstname: String
    lastname: String
    phone: Int
    image: String
}

type SignupPayload {
    success: Boolean
    error: String
    user: User
}

type VerifyToken {
    payload: GenericScalar
}

type RefreshToken {
    token: String
    refresh_token: String
    payload: GenericScalar
}

type TokenAuth {
    token: String
    refresh_token: String
    payload: GenericScalar
}

type RevokeToken {
    revoked: Int
}